## The type of library we want to build. Possible values:
##   relocatable
##   static
ADO_LIBRARY_TYPE=static

# You may edit this makefile as long as you keep these original 
# target names defined.
MODE=distrib
GNATMAKE=@GNATMAKE@
GNATCLEAN=@GNATCLEAN@
GPRINSTALL=@GPRINSTALL@
INSTALL=@INSTALL@
DYNAMO=dynamo

GPRPATH=ado.gpr
ADO_MYSQL_GPRPATH=ado_mysql.gpr
ADO_SQLITE_GPRPATH=ado_sqlite.gpr

version=@ADO_VERSION@

distdir=ada-ado-@ADO_VERSION@

BUILDS_SHARED=@BUILDS_SHARED@

DIST_FILE=ada-ado-@ADO_VERSION@.tar.gz

HAVE_MYSQL=@ADO_HAVE_MYSQL@
HAVE_SQLITE=@ADO_HAVE_SQLITE@

MYSQL_LIBNAME=@MYSQL_LIBNAME@
MYSQL_LIBS=@MYSQL_LIBS@

LN_S=@LN_S@
MKDIR=mkdir
CP=cp
LN=ln -s

ifeq (${OS},Windows_NT)
LIBEXT=dll
LIBVER=dll
else
LIBEXT=so
LIBVER=so.$(version)
endif

srcdir = .
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
top_builddir = .

# share/ada/adainclude
infix_inc=@ADA_INC_BASE@

# share/ada/adainclude
infix_prj=@ADA_PRJ_BASE@

# lib
infix_lib=@ADA_LIB_BASE@

# lib/ada/adalib
infix_ali=@ADA_ALI_BASE@

includedir=${prefix}/${infix_inc}
projectdir=${prefix}/${infix_prj}
bindir=${prefix}/bin
libdir=${prefix}/${infix_lib}
alidir=${prefix}/${infix_ali}
dynamodir=${prefix}/share/dynamo

libname=libada_ado
libprefix=$(libname)_

PROCESSORS=@NR_CPUS@
COVERAGE=no
MAKE_ARGS=-XMODE=${MODE} -XCOVERAGE=${COVERAGE} -XADO_LIBRARY_TYPE=${ADO_LIBRARY_TYPE} -XPROCESSORS=$(PROCESSORS)
ifeq ($(ADO_LIBRARY_TYPE),relocatable)
MAKE_ARGS += -XUTIL_BUILD=relocatable -XUTIL_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XXMLADA_BUILD=relocatable
MAKE_ARGS += -XLIBRARY_TYPE=relocatable
endif

mysql_src_dir=${srcdir}/src/mysql
sqlite_src_dir=${srcdir}/src/sqlite

ifeq (${BUILDS_SHARED},yes)
all:     static shared
install: uninstall install_static install_shared
else
all:     static
install: uninstall install_static
endif

# Build executables for all mains defined by the project.
build:  setup
	$(GNATMAKE) -m -p -P"$(GPRPATH)" $(MAKE_ARGS)
ifeq (${HAVE_SQLITE},yes)
	$(GNATMAKE) -m -p -P"$(ADO_SQLITE_GPRPATH)" $(MAKE_ARGS)
endif
ifeq (${HAVE_MYSQL},yes)
	$(GNATMAKE) -m -p -P"$(ADO_MYSQL_GPRPATH)" $(MAKE_ARGS)
endif
	$(GNATMAKE) -m -p -Pado_tests $(MAKE_ARGS) -largs -Llib/ado/${ADO_LIBRARY_TYPE}

static:
	$(MAKE) ADO_LIBRARY_TYPE=static build

shared:
	$(MAKE) ADO_LIBRARY_TYPE=relocatable build

setup: src/mysql/mysql-lib.ads regtests/ado-testsuite-drivers.adb src/static/ado-drivers-initialize.adb obj/ado/static lib/ado/static

obj/ado/static lib/ado/static:
	$(MKDIR) -p $@

# Not intended for manual invocation.
# Invoked if automatic builds are enabled.
# Analyzes only on those sources that have changed.
# Does not build executables.
autobuild:
	$(GNATMAKE) -gnatc -c -k  -P "$(GPRPATH)"

# Configure the driver file
src/static/ado-drivers-initialize.adb: src/static/ado-drivers-initialize.gpb Makefile
	mysql=`(test T$(HAVE_MYSQL) = Tyes && echo True) || echo False`; \
	sqlite=`(test T$(HAVE_SQLITE) = Tyes && echo True) || echo False`; \
	gnatprep -DHAVE_MYSQL=$$mysql \
	          -DHAVE_SQLITE=$$sqlite \
		  src/static/ado-drivers-initialize.gpb $@

src/mysql/mysql-lib.ads: src/mysql/mysql-lib.gpb Makefile
	libs=`echo '"$(MYSQL_LIBS)"' | sed -e 's,^ *,,' -e 's,  , ,g' -e 's, $$,,g' | sed -e 's, ," \& ASCII.NUL \& ",g'` ; \
    libs=`echo "$$libs" | sed -e 's,ASCII.NUL & "" & ASCII.NUL,ASCII.NUL,g'`;\
	gnatprep -DMYSQL_LIB="$$libs" src/mysql/mysql-lib.gpb $@

regtests/ado-testsuite-drivers.adb: regtests/ado-testsuite-drivers.gpb Makefile
	mysql=`(test T$(HAVE_MYSQL) = Tyes && echo True) || echo False`; \
	sqlite=`(test T$(HAVE_SQLITE) = Tyes && echo True) || echo False`; \
	gnatprep -DHAVE_MYSQL=$$mysql \
	         -DHAVE_SQLITE=$$sqlite \
		 regtests/ado-testsuite-drivers.gpb $@

# Build and run the unit tests
test:	test-sqlite test-mysql

test-sqlite:		build regtests.db
ifeq (${HAVE_SQLITE},yes)
	bin/ado_harness -p SQLite -t 120 -xml ado-sqlite-aunit.xml -config test-sqlite.properties
endif

test-mysql:		build create-mysql-tests
ifeq (${HAVE_MYSQL},yes)
	bin/ado_harness -p MySQL -xml ado-mysql-aunit.xml -config test-mysql.properties
endif

CLEAN_FILES=src/static/ado-drivers-initialize.adb src/mysql/mysql-lib.ads regtests/ado-testsuite-drivers.adb

# Clean the root project of all build products.
clean:
	-rm -rf lib obj bin
	-rm -f $(CLEAN_FILES)

# Clean root project and all imported projects too.
clean_tree:
	$(GNATCLEAN) -q -P "$(GPRPATH)" -r

# Check *all* sources for errors, even those not changed.
# Does not build executables.
analyze:
	$(GNATMAKE) $(MAKE_ARGS) -f  -gnatc -c -k  -P "$(GPRPATH)"

# Clean, then build executables for all mains defined by the project.
rebuild: clean build

doc:
	$(DYNAMO) build-doc -markdown wiki

GENERATOR=dynamo

generate:
	$(GENERATOR) generate db/regtests
	$(GENERATOR) generate db/samples

# Create the test sqlite database
regtests.db:
ifeq (${HAVE_SQLITE},yes)
	sqlite3 $@ < db/regtests/sqlite/create-ado-sqlite.sql
endif

# Create the samples sqlite database
samples.db:
ifeq (${HAVE_SQLITE},yes)
	sqlite3 $@ < db/samples/sqlite/create-ado-sqlite.sql
endif

# Create the tables in the database.
# (The database itself must have been created)
create-mysql-tests:
ifeq (${HAVE_MYSQL},yes)
	mysql --defaults-extra-file=db/regtests/mysql/mysql.cnf < db/regtests/mysql/drop-ado-mysql.sql
	mysql --defaults-extra-file=db/regtests/mysql/mysql.cnf < db/regtests/mysql/create-ado-mysql.sql
endif

dist:
	git archive -o $(DIST_FILE) --prefix=$(distdir)/ HEAD

install_static:
	$(MAKE) ADO_LIBRARY_TYPE=static install_lib

install_shared:
	$(MAKE) ADO_LIBRARY_TYPE=relocatable install_lib

install_lib:  install_dynamo
ifneq (${GPRINSTALL},)
	$(GPRINSTALL) -p -f --prefix=${prefix} \
	    $(MAKE_ARGS) \
		--build-name=$(ADO_LIBRARY_TYPE) $(GPRPATH)
ifeq (${HAVE_MYSQL},yes)
	$(GPRINSTALL) -p -f --prefix=${prefix} \
	    $(MAKE_ARGS) \
		--build-name=$(ADO_LIBRARY_TYPE) $(ADO_MYSQL_GPRPATH)
endif
ifeq (${HAVE_SQLITE},yes)
	$(GPRINSTALL) -p -f --prefix=${prefix} \
	    $(MAKE_ARGS) \
		--build-name=$(ADO_LIBRARY_TYPE) $(ADO_SQLITE_GPRPATH)
endif
else
	rm -rf ${alidir}/ada-ado-mysql \
	       ${alidir}/ada-ado-sqlite \
	       ${alidir}/ada-ado/$(ADO_LIBRARY_TYPE)
	$(MKDIR) -p ${includedir}/ada-ado ${includedir}/ada-ado/static ${includedir}/ada-ado/dynamic
	$(MKDIR) -p ${projectdir}/
	${MKDIR} -p ${alidir}/ada-ado/$(ADO_LIBRARY_TYPE)
	test T${HAVE_MYSQL} = Tno || ${MKDIR} -p ${includedir}/ada-ado-mysql
	test T${HAVE_SQLITE} = Tno || ${MKDIR} -p ${includedir}/ada-ado-sqlite
	${CP} -p src/*.ad[bs] ${includedir}/ada-ado
	${CP} -p src/dynamic/*.ad[bs] ${includedir}/ada-ado/dynamic
	${CP} -p src/static/*.ad[bs] ${includedir}/ada-ado/static
	${CP} -p src/model/*.ad[bs] ${includedir}/ada-ado
	test T${HAVE_MYSQL} = Tno || ${CP} -p ${mysql_src_dir}/*.ad[bs] ${includedir}/ada-ado-mysql
	test T${HAVE_SQLITE} = Tno || ${CP} -p ${sqlite_src_dir}/*.ad[bs] ${includedir}/ada-ado-sqlite
	sed -e "s,xLIBRARY_TYPE,$(ADO_LIBRARY_TYPE),g" < distrib/ado.gpr > ${projectdir}/ado.gpr
	sed -e "s,xLIBRARY_TYPE,$(ADO_LIBRARY_TYPE),g" \
		< distrib/ado_mysql.gpr > ${projectdir}/ado_mysql.gpr
	sed -e "s,xLIBRARY_TYPE,$(ADO_LIBRARY_TYPE),g" \
		< distrib/ado_sqlite.gpr > ${projectdir}/ado_sqlite.gpr
	${CP} lib/ado/$(ADO_LIBRARY_TYPE)/*.ali ${alidir}/ada-ado/$(ADO_LIBRARY_TYPE)
ifeq ($(ADO_LIBRARY_TYPE),static)
	${CP} lib/ado/$(ADO_LIBRARY_TYPE)/$(libname).a ${libdir}/
else
	${MKDIR} -p ${alidir}/ada-ado-mysql ${alidir}/ada-ado-sqlite
	${CP} -p lib/ado/$(ADO_LIBRARY_TYPE)/$(libname).$(LIBVER) ${libdir}/
	test T${HAVE_MYSQL} = Tno || ${CP} -p lib/ado-mysql/$(ADO_LIBRARY_TYPE)/$(libprefix)mysql.$(LIBVER) ${libdir}/
	test T${HAVE_SQLITE} = Tno || ${CP} -p lib/ado-sqlite/$(ADO_LIBRARY_TYPE)/$(libprefix)sqlite.$(LIBVER) ${libdir}/
	test T${HAVE_MYSQL} = Tno || ${CP} lib/ado-mysql/$(ADO_LIBRARY_TYPE)/*.ali ${alidir}/ada-ado-mysql
	test T${HAVE_SQLITE} = Tno || ${CP} lib/ado-sqlite/$(ADO_LIBRARY_TYPE)/*.ali ${alidir}/ada-ado-sqlite
ifneq (${OS},Windows_NT)
	cd ${libdir} && \
	rm -f $(libname).$(LIBEXT) && \
	${LN} $(libname).$(LIBVER) $(libname).$(LIBEXT)
	test T${HAVE_MYSQL} = Tno || cd ${libdir} && \
		 rm -f $(libprefix)mysql.$(LIBEXT) && \
		 ${LN} $(libprefix)mysql.$(LIBVER) $(libprefix)mysql.$(LIBEXT)
	test T${HAVE_SQLITE} = Tno || cd ${libdir} && \
		 rm -f $(libprefix)sqlite.$(LIBEXT) && \
		 ${LN} $(libprefix)sqlite.$(LIBVER) $(libprefix)sqlite.$(LIBEXT)
else
	${CP} -p lib/ado/$(ADO_LIBRARY_TYPE)/$(libname).$(LIBVER) ${bindir}/
	test T${HAVE_MYSQL} = Tno || ${CP} -p lib/ado-mysql/$(ADO_LIBRARY_TYPE)/$(libprefix)mysql.$(LIBVER) ${bindir}/
	test T${HAVE_SQLITE} = Tno || ${CP} -p lib/ado-sqlite/$(ADO_LIBRARY_TYPE)/$(libprefix)sqlite.$(LIBVER) ${bindir}/
endif
endif
endif

install_dynamo:
	${MKDIR} -p ${dynamodir}/ado/db
	${CP} db/*.xml ${dynamodir}/ado/db/
	test T${HAVE_MYSQL} = Tno || ${MKDIR} -p ${dynamodir}/ado/db/mysql
	test T${HAVE_SQLITE} = Tno || ${MKDIR} -p ${dynamodir}/ado/db/sqlite
	test T${HAVE_MYSQL} = Tno || ${CP} db/mysql/*.sql ${dynamodir}/ado/db/mysql
	test T${HAVE_SQLITE} = Tno || ${CP} db/sqlite/*.sql ${dynamodir}/ado/db/sqlite
	${CP} dynamo.xml ${dynamodir}/ado/
	${CP} NOTICE.txt ${dynamodir}/ado/
	${CP} LICENSE.txt ${dynamodir}/ado/

uninstall:
ifneq (${GPRINSTALL},)
	-$(GPRINSTALL) -q -f --prefix=${prefix} \
	    $(MAKE_ARGS) --uninstall $(GPRPATH)
ifeq (${HAVE_MYSQL},yes)
	-$(GPRINSTALL) -q -f --prefix=${prefix} \
	    $(MAKE_ARGS) \
		--uninstall $(ADO_MYSQL_GPRPATH)
endif
ifeq (${HAVE_SQLITE},yes)
	-$(GPRINSTALL) -q -f --prefix=${prefix} \
	    $(MAKE_ARGS) \
		--uninstall $(ADO_SQLITE_GPRPATH)
endif
else
	rm -rf ${includedir}/ada-ado
	rm -rf ${includedir}/ada-ado-mysql
	rm -rf ${includedir}/ada-ado-sqlite
	rm -rf ${alidir}/ada-ado
	rm -rf ${alidir}/ada-ado-mysql
	rm -rf ${alidir}/ada-ado-sqlite
	rm -f ${libdir}/$(libname).a
	rm -f ${libdir}/$(libprefix)mysql.a
	rm -f ${libdir}/$(libprefix)sqlite.a
	rm -f ${libdir}/$(libname).so.${version}
	rm -f ${libdir}/$(libprefix)mysql.so.${version}
	rm -f ${libdir}/$(libprefix)sqlite.so.${version}
	rm -f ${projectdir}/ado.gpr
	rm -f ${projectdir}/ado_mysql.gpr
	rm -f ${projectdir}/ado_sqlite.gpr
endif
	rm -rf ${dynamodir}/ado
